# -*- coding: utf-8 -*-"""[Graf algoritmi]: Seminar - ChristmasTravelTests for ChristmasTravel class implementation.https://community.topcoder.com/stat?c=problem_statement&pm=15865This problem was used for:       Single Round Match 773 Round 1 - Division I, Level Two       Single Round Match 773 Round 1 - Division II, Level Three@author: Anamarija Papic"""import unittestfrom ChristmasTravel import ChristmasTravelclass TestChristmasTravel(unittest.TestCase):    def setUp(self):        self.christmas_travel = ChristmasTravel()            def check_valid_output(self, result, N, A):        """        Check if the output meets the specified criteria for a valid solution.        Parameters:        - result (list of str): The output to be checked.        - N (int): Number of airports in Absurdistan.        - A (int): Number of separate airline companies.        """        # Check if the output is a list        self.assertIsInstance(result, list)        if result:            # Check if each element is a string of length N            self.assertTrue(all(isinstance(row, str) and len(row) == N for row in result))            # Check if '-' is on the main diagonal            self.assertTrue(all(result[i][i] == '-' for i in range(N)))            # Check if characters at [i][j] and [j][i] are equal and represent the airline            for i in range(N):                for j in range(i + 1, N):                    self.assertEqual(result[i][j], result[j][i])            # Check if each character is one of the first A uppercase letters or '-'            valid_letters = set(chr(ord('A') + i) for i in range(A))            self.assertTrue(all(char in valid_letters or char == '-' for row in result for char in row))                def test_example_0(self):        """        Test case for the example 0 in the problem statement.        """        result = self.christmas_travel.plan(3, 1)        self.check_valid_output(result, 3, 1)    def test_example_1(self):        """        Test case for the example 1 in the problem statement.        """        result = self.christmas_travel.plan(3, 3)        self.check_valid_output(result, 3, 3)    def test_example_2(self):        """        Test case for the example 2 in the problem statement.        """        result = self.christmas_travel.plan(5, 3)        self.check_valid_output(result, 5, 3)    def test_example_3(self):        """        Test case for the example 3 in the problem statement.        """        result = self.christmas_travel.plan(1, 1)        self.check_valid_output(result, 1, 1)    def test_example_4(self):        """        Test case for the example 4 in the problem statement.        """        result = self.christmas_travel.plan(6, 5)        self.check_valid_output(result, 6, 5)if __name__ == '__main__':    unittest.main()